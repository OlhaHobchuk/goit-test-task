{"version":3,"file":"static/js/871.50e22b3d.chunk.js","mappings":"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","sources":["services/api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/TweetsCardItem/TweetsCardsItem.module.css?e328","components/TweetsCardItem/TweetsCardsItem.jsx","webpack://react-homework-template/./src/components/TweetsCards/TweetsCards.module.css?67ca","components/TweetsCards/TweetsCards.jsx","webpack://react-homework-template/./src/pages/TweetsPage/TweetsPage.module.css?4f0b","pages/TweetsPage/TweetsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6464ab86043c103502bf91c0.mockapi.io/';\n\nexport const fetchUsers = async (page, per_page) => {\n  const result = await axios.get(`users/?page=${page}&limit=${per_page}`);\n  return result.data;\n};\n\nexport const updateUsersData = async (id, { checked, followers }) => {\n  await axios.put(`users/${id}`, { checked, followers }).then(({ data }) => {\n    return data;\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import { Triangle } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <Triangle\n        height=\"300\"\n        width=\"300\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tweetsItem\":\"TweetsCardsItem_tweetsItem__QGAtr\",\"logoImage\":\"TweetsCardsItem_logoImage__aKin7\",\"imageWrapper\":\"TweetsCardsItem_imageWrapper__aFrLP\",\"avatarWrapper\":\"TweetsCardsItem_avatarWrapper__2LpGE\",\"avatarLine\":\"TweetsCardsItem_avatarLine__+tF8i\",\"avatarCircle\":\"TweetsCardsItem_avatarCircle__Lpi6b\",\"avatarImage\":\"TweetsCardsItem_avatarImage__NfRTC\",\"tweetsWrapper\":\"TweetsCardsItem_tweetsWrapper__mutpt\",\"tweetsText\":\"TweetsCardsItem_tweetsText__sOpuZ\",\"followersText\":\"TweetsCardsItem_followersText__jq7BM\",\"buttonWrapper\":\"TweetsCardsItem_buttonWrapper__Mz36B\",\"followButton\":\"TweetsCardsItem_followButton__QxxFq\",\"followingButton\":\"TweetsCardsItem_followingButton__dGFrd\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { updateUsersData } from '../../services/api';\n\nimport logo from '../../images/Logo.png';\nimport background from '../../images/backgroundPicture.png';\nimport line from '../../images/line.png';\nimport circle from '../../images/circle.png';\nimport css from './TweetsCardsItem.module.css';\n\nexport const TweetsCardsItem = user => {\n  const { id, avatar, tweets, followers, checked } = user.user;\n\n  const [selection, setSelection] = useState(checked);\n  const [followersCount, setFollowersCount] = useState(followers);\n\n  const handleButtonClick = () => {\n    setSelection(!selection);\n\n    if (selection) {\n      updateUsersData(id, {\n        checked: !selection,\n        followers: followersCount + 1,\n      });\n      setFollowersCount(followersCount + 1);\n    }\n    if (!selection) {\n      updateUsersData(id, {\n        checked: !selection,\n        followers: followersCount - 1,\n      });\n      setFollowersCount(followersCount - 1);\n    }\n  };\n\n  return (\n    <li key={id} className={css.tweetsItem}>\n      <img\n        className={css.logoImage}\n        src={logo}\n        alt=\"logo\"\n        width=\"77\"\n        height=\"22\"\n      />\n      <div className={css.imageWrapper}>\n        <img\n          className={css.backgroundImage}\n          src={background}\n          alt=\"background\"\n          width=\"308\"\n          height=\"162\"\n        ></img>\n      </div>\n      <div className={css.avatarWrapper}>\n        <img className={css.avatarLine} src={line} alt=\"line\" height=\"8\" />\n        <img\n          className={css.avatarCircle}\n          src={circle}\n          alt=\"circle\"\n          width=\"80\"\n          height=\"80\"\n        />\n        <img\n          className={css.avatarImage}\n          src={avatar}\n          alt=\"user avatar\"\n          width=\"62\"\n          height=\"62\"\n        />\n      </div>\n      <div className={css.tweetsWrapper}>\n        <p className={css.tweetsText}>{tweets} Tweets</p>\n        <p className={css.followersText}>{followersCount} Followers</p>\n      </div>\n      <div className={css.buttonWrapper}>\n        {selection ? (\n          <button\n            type=\"button\"\n            className={css.followButton}\n            onClick={handleButtonClick}\n            selected={selection}\n          >\n            Follow\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={css.followingButton}\n            onClick={handleButtonClick}\n            selected={selection}\n          >\n            Following\n          </button>\n        )}\n      </div>\n    </li>\n  );\n};\n\nTweetsCardsItem.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"usersList\":\"TweetsCards_usersList__bVJde\",\"loadMoreBtn\":\"TweetsCards_loadMoreBtn__0rSmo\"};","import { useState, useEffect } from 'react';\nimport { fetchUsers } from '../../services/api';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../../components/Loader/Loader.jsx';\nimport { TweetsCardsItem } from '../../components/TweetsCardItem/TweetsCardsItem';\n\nimport css from './TweetsCards.module.css';\n\nexport const TweetsCards = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(true);\n  const PER_PAGE = 6;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getUsers = async () => {\n      try {\n        const data = await fetchUsers(page, PER_PAGE);\n        if (data.length === 0) {\n          setShowLoadMoreBtn(false);\n          Notiflix.Notify.warning('There are no users more');\n          return;\n        }\n        setUsers(prevState => (page === 1 ? data : [...prevState, ...data]));\n      } catch (error) {\n        onError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getUsers();\n  }, [page]);\n\n  const handleLoadMore = async () => {\n    setLoadMore(true);\n    setPage(page => page + 1);\n    setLoadMore(false);\n  };\n\n  const onError = error => {\n    Notiflix.Notify.warning('Sorry, there is something wrong!');\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ul className={css.usersList}>\n            {users.map(user => {\n              return <TweetsCardsItem key={user.id} user={user} />;\n            })}\n          </ul>\n          {showLoadMoreBtn && (\n            <button\n              onClick={handleLoadMore}\n              type=\"button\"\n              className={css.loadMoreBtn}\n            >\n              {loadMore ? 'Loading...' : 'Load more'}\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tweetsPageContainer\":\"TweetsPage_tweetsPageContainer__rSAAS\",\"arrowContainer\":\"TweetsPage_arrowContainer__mFRUu\",\"backArrow\":\"TweetsPage_backArrow__nQtt6\",\"tweetsCardsContainer\":\"TweetsPage_tweetsCardsContainer__McXnN\"};","import { useNavigate } from 'react-router-dom';\nimport { IoCaretBackOutline } from 'react-icons/io5';\nimport { TweetsCards } from '../../components/TweetsCards/TweetsCards.jsx';\n\nimport css from './TweetsPage.module.css';\n\nconst TweetsPage = () => {\n  const navigate = useNavigate();\n  return (\n    <div className={css.tweetsPageContainer}>\n      <div className={css.arrowContainer} onClick={() => navigate('/')}>\n        <IoCaretBackOutline className={css.backArrow} />\n      </div>\n      <div className={css.tweetsCardsContainer}>\n        <TweetsCards />\n      </div>\n    </div>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["axios","fetchUsers","page","per_page","result","data","updateUsersData","id","checked","followers","then","Loader","className","css","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","TweetsCardsItem","user","avatar","tweets","useState","selection","setSelection","followersCount","setFollowersCount","handleButtonClick","src","alt","background","type","onClick","selected","TweetsCards","users","setUsers","isLoading","setIsLoading","loadMore","setLoadMore","setPage","showLoadMoreBtn","setShowLoadMoreBtn","useEffect","getUsers","length","Notiflix","prevState","onError","handleLoadMore","error","map","navigate","useNavigate"],"sourceRoot":""}